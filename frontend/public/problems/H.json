{
    "pid": "H",
    "id": "H",
    "description": "# Encryption\n### Problem Description\n\nSyrin is enjoying her favorite drink at Milan's most famous coffee shop, Steerbucks. She is sending text messages over Steerbucks’ public network when she realizes her messaging client does not automatically encrypt her texts. She notices Patrick, a sketchy man, sitting in the corner. While she is concerned, she doesn't know he is a malicious hacker and is examining Steerbucks’ network traffic. Syrin is rightfully paranoid about sending unencrypted messages over the public network, so she devises the following encryption scheme: \n\nFirst, the spaces are removed from the text. Let N be the length of this text. \nThen, characters are written into a grid, whose rows and columns have the following constraints (**a** and **b**):\n\n#### a) &#8970;&#8730;(N)&#8971; &#8804; rows &#8804; columns &#8968;&#8730;(N)&#8969;\n\nWhere &#8970;x&#8971; is the floor of x, representing the greatest integer less than or equal to x\nAnd &#8968;x&#8969; is the ceiling of x, representing the least integer greater than or equal to x\n\nand:\n\n#### b)    rows &#215; columns &#8805; N\n  \nFinally, after creating this grid, the encrypted string is generated by traversing down the columns of the grid, with a space between each new column.\n  \n##### Example\nConsider the input text:\n*i am really enjoying my time at steerbucks this fine wednesday morning*\n\nAfter removing spaces, the text is 59 characters long. &#8730;(59) is between 7 and 8, so it is written in the form of a grid with 7 rows and 8 columns.\n\n```\niamreall \nyenjoyin\ngmytimea\ntsteerbu\ncksthisf\ninewedne\nsdaymorn\ning\n```\n\n The final encrypted string is then created from the columns of the grid:\n *iygtcisi aemskndn mnytseag rjtetwy eoiehem aymrido liebsnr lnaufen*\n\nTo solve this problem, **implement this encryption scheme.**\n\n## Writing Your Solution\nEnter your solution in the body of this method in the given code skeleton.\n\n### Method Signature\n#### Java\n```public static String encrypt(String s)```\n#### Python\n```def encrypt(s):```\n\n### Sample Method Calls\n`encrypt(\"my name is sam\")` returns `\"mms yea nim as\"`\n\n## Testing Your Program from the Console\n### Console Input Format\n* the first line contains `t`, the number of tests\n* for each test, a single line contains the input string, `s`\n\n### Assumptions\n* 1 <= `t` <= 10\n* 1 <= length of `s` < 100 characters\n* `s` will not contain any spaces\n\n### Console Output Format\n* for each test, a single line with the encrypted string\n\n### Sample Run\n#### Input:\n```\n2\niamreallyenjoyingmytimeatsteerbucksthisfinewednesdaymorning\nmynameissam\n```\n\n#### Output:\n```\niygtcisi aemskndn mnytseag rjtetwy eoiehem aymrido liebsnr lnaufen\nmms yea nim as\n```\n",
    "name": "Encryption",
    "division": "blue",
    "tests": [{
            "result": "",
            "include": false,
            "in": "2\nhaveaniceday\nfeedthedog",
            "out": "hae and via ecy \nfto ehg ee dd"
        },
        {
            "result": "",
            "include": false,
            "in": "2\nfourscoreandsevenyearsagoourfathersbroughtforthonthiscontinentanewnationconceive\nchillout",
            "out": "faerrtonc onafohneo udrauotwn rsstgninc seahhtnae cvgetheti oeorfiniv rnosostoe eyubrcan\nclu hlt io"
        },
        {
            "result": "",
            "include": false,
            "in": "2\nthisisatesttestingaregularlineofinput\niamreallyenjoyingmytimeatsteerbucksthisfinewednesdaymorning",
            "out": "tttgnu heiuet isnlo stgaf itari serln aseip\niygtcisi aemskndn mnytseag rjtetwy eoiehem aymrido liebsnr lnaufen"
        }
    ]
}